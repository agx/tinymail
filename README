About
=====

Project tinymail is an attempt to create an E-mail client framework for small
devices.

Development tips
================
You can find the GUnit framework at http://kooditakomo.cs.tut.fi/projects/gunit
You'll need it if you build with --enable-unit-tests which will compile the
unit tests. Check the sources of the unit tests for more information.

Unit test usage

  export LD_LIBRARY_PATH=./libtinymail-test/.libs/
  gunit-test-runner-tool -s tinymail-test-suite -v gnome

Building tips
=============

You can set the CFLAGS="-DDEVEL" environment variable to enable a debug build.

For building from repository source code, you simply do something like this:

./autogen.sh --prefix=/opt/tinymail 
make
make install

You can use --enable-gtk-doc to build API documentation in docs/devel/reference
You can use --enable-gnome=no/yes to disable or enable some GNOME features.
You can use --with-html-component=COMPONENT to select which HTML component to
use. There's also the option "none" to build no HTML component.

Packager tips
=============

You can use make dist, make distcheck and make distclean for distribution
building and package preparations. You can of course use --prefix and all other
typical autotools settings and configuration flags.

Supported platforms
===================

Status
------

  Work in progress: Maemo, GPE and OLPC
  Works: GNOME desktop

One Laptop Per Child platform (OLPC)
------------------------------------

  ./autogen.sh --prefix=/opt/olpc/tinymail --with-platform=olpc 	  \
	--enable-gnome=no --with-html-component=none

Maemo platform (For example for the Nokia 770)
----------------------------------------------

  ./autogen.sh --prefix=/opt/olpc/tinymail --with-platform=maemo	  \
	--enable-gnome=no --with-html-component=gtkhtml

GPE platform (For example for PocketPC)
---------------------------------------

  ./autogen.sh --prefix=/opt/olpc/tinymail --with-platform=gpe		  \
        --enable-gnome=no --with-html-component=gtkhtml

GNOME desktop platform
----------------------

  ./autogen.sh --prefix=/opt/olpc/tinymail --with-platform=gnome-desktop  \
	--enable-gnome=yes --with-html-component=mozembed


Information for developers who would like to tryout the demo user interface:
============================================================================

The libtinymail-gnome-desktop is an implementation that will work on a typical
GNOME desktop. It has been tested on Ubuntu Breezy, Dapper and on Fedora Core 4
and 5.

It uses GConf for storing the account settings, it can use gnome-keyring and
GnomePasswordDialog for password management. It can also use build-in infrast-
ructure for password handling. It can use GnomeVFS and normal FILE operations.
It can use a GtkMozEmbed HTML component (which is not recommended). It can 
(soon) also use a GtkHTML HTMl component (recommended).

To disable GnomeVFS, icon lookups using the MIME-type, GnomePasswordDialog and
gnome-keyring, you use the --enable-gnome=no compilation option during the 
./autogen.sh or ./configure.

To select the HTML component you use the --with-html-component=COMPONENT
option. Possible values for COMPONENT are mozembed, none and gtkhtml.

If you want to create a test account, use something like this. You should also
take a look at tny-account-store.c in libtinymail-gnome-desktop. Please note
that *this* example does *not* mean that *all* tinymail-using applications will
be configurable using this method! This method is for the demo-ui only!

gconftool-2 -s /apps/tinymail/cache_dir -t string .tinymail
gconftool-2 -s /apps/tinymail/accounts/count -t int 1
gconftool-2 -s /apps/tinymail/accounts/0/proto -t string imap
gconftool-2 -s /apps/tinymail/accounts/0/type -t string store
gconftool-2 -s /apps/tinymail/accounts/0/user -t string [username]
gconftool-2 -s /apps/tinymail/accounts/0/hostname -t string [mailserver]


Ubuntu Breezy & Dapper
----------------------

Packages

  gnome-devel
  subversion
  firefox-dev
  libcamel1.2-dev
  libnm-glib-0-dev
  automake-1.7

Building

  Both Ubuntu Breezy & Dapper support the default ./autogen.sh && make && make 
  install. Provided you installed the above packages.

Dependencies

  If you want the unit tests, check above at the Development tips section. You
  can find a URL to GUnit. There's often also Debian packages that will work
  with Ubuntu Dapper & Breezy (and maybe/probably also with newer versions of
  both the Debian and Ubuntu distributions).

Fedora Core 4 & 5
-----------------

Packages

  Subversion
  gnome-common
  evolution-data-server-devel
  NetworkManager-devel
  NetworkManager-glib
  gnome-keyring-devel
  automake-1.7

Building
  
  Use --with-html-component=none to disable building any HTML component. Because
  Fedora Core 4 uses a quite old gnome-keyring API, it's recommended to also use
  --enable-gnome=no when building on Fedora Core 4. 

Dependencies

  If you want the unit tests, check above at the Development tips section. You
  can find a URL to GUnit sources.


