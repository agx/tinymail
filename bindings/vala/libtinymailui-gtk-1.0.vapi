/* libtinymailui-gtk-1.0.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Tny", lower_case_cprefix = "tny_")]
namespace Tny {
	[CCode (cprefix = "TNY_GTK_ACCOUNT_LIST_MODEL_", cheader_filename = "tnyui.h")]
	public enum GtkAccountListModelColumn {
		NAME_COLUMN,
		INSTANCE_COLUMN,
		N_COLUMNS,
	}
	[CCode (cprefix = "TNY_GTK_ATTACH_LIST_MODEL_", cheader_filename = "tnyui.h")]
	public enum GtkAttachListModelColumn {
		PIXBUF_COLUMN,
		FILENAME_COLUMN,
		INSTANCE_COLUMN,
		N_COLUMNS,
	}
	[CCode (cprefix = "TNY_GTK_FOLDER_STORE_TREE_MODEL_", cheader_filename = "tnyui.h")]
	public enum GtkFolderStoreTreeModelColumn {
		NAME_COLUMN,
		UNREAD_COLUMN,
		ALL_COLUMN,
		TYPE_COLUMN,
		INSTANCE_COLUMN,
		N_COLUMNS,
	}
	[CCode (cprefix = "TNY_GTK_HEADER_LIST_MODEL_", cheader_filename = "tnyui.h")]
	public enum GtkHeaderListModelColumn {
		FROM_COLUMN,
		TO_COLUMN,
		SUBJECT_COLUMN,
		CC_COLUMN,
		DATE_SENT_COLUMN,
		DATE_RECEIVED_TIME_T_COLUMN,
		DATE_SENT_TIME_T_COLUMN,
		MESSAGE_SIZE_COLUMN,
		DATE_RECEIVED_COLUMN,
		INSTANCE_COLUMN,
		FLAGS_COLUMN,
		N_COLUMNS,
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkAccountListModel : Gtk.ListStore, Gtk.Buildable, Gtk.TreeModel, Gtk.TreeDragSource, Gtk.TreeDragDest, Gtk.TreeSortable, Tny.List {
		public weak GLib.Mutex iterator_lock;
		public weak GLib.List first;
		public bool first_needs_unref;
		public GtkAccountListModel ();
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkAttachListModel : Gtk.ListStore, Gtk.Buildable, Gtk.TreeModel, Gtk.TreeDragSource, Gtk.TreeDragDest, Gtk.TreeSortable, Tny.List {
		public weak GLib.List first;
		public weak GLib.Mutex iterator_lock;
		public bool first_needs_unref;
		public GtkAttachListModel ();
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkAttachmentMimePartView : GLib.Object, Tny.MimePartView {
		public GtkAttachmentMimePartView (Tny.GtkAttachListModel iview);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkExpanderMimePartView : Gtk.Expander, Atk.Implementor, Gtk.Buildable, Tny.MimePartView {
		public GtkExpanderMimePartView (Tny.MimePartView view);
		public void set_view (Tny.MimePartView view);
	}
	[CCode (cheader_filename = "tny-gtk-folder-store-tree-model.h")]
	public class GtkFolderStoreTreeModel : Gtk.TreeStore, Gtk.Buildable, Gtk.TreeModel, Gtk.TreeDragSource, Gtk.TreeDragDest, Gtk.TreeSortable, Tny.List, Tny.FolderStoreObserver, Tny.FolderObserver {
		public weak GLib.List first;
		public weak GLib.List store_obs;
		public weak GLib.List fol_obs;
		public weak GLib.Mutex iterator_lock;
		public weak Tny.FolderStoreQuery query;
		public bool first_needs_unref;
		public weak GLib.PtrArray signals;
		public void append (Tny.FolderStore item, string root_name);
		public GtkFolderStoreTreeModel (Tny.FolderStoreQuery query);
		public void prepend (Tny.FolderStore item, string root_name);
	}
	[CCode (cheader_filename = "tny-gtk-header-list-model.h")]
	public class GtkHeaderListModel : GLib.Object, Gtk.TreeModel, Tny.List {
		public GtkHeaderListModel ();
		public static int received_date_sort_func (Gtk.TreeModel model, Gtk.TreeIter a, Gtk.TreeIter b, pointer user_data);
		public static int sent_date_sort_func (Gtk.TreeModel model, Gtk.TreeIter a, Gtk.TreeIter b, pointer user_data);
		public void set_folder (Tny.Folder folder, bool refresh, Tny.GetHeadersCallback callback, Tny.StatusCallback status_callback, pointer user_data);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkHeaderView : Gtk.Table, Atk.Implementor, Gtk.Buildable, Tny.HeaderView {
		public GtkHeaderView ();
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkImageMimePartView : Gtk.Image, Atk.Implementor, Gtk.Buildable, Tny.MimePartView {
		public GtkImageMimePartView (Tny.StatusCallback status_callback, pointer status_user_data);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkLockable : GLib.Object, Tny.Lockable {
		public GtkLockable ();
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkMimePartSaveStrategy : GLib.Object, Tny.MimePartSaveStrategy {
		public GtkMimePartSaveStrategy (Tny.StatusCallback status_callback, pointer status_user_data);
	}
	[CCode (cheader_filename = "tny-gtk-msg-view.h")]
	public class GtkMsgView : Gtk.Bin, Atk.Implementor, Gtk.Buildable, Tny.MimePartView, Tny.MsgView {
		public weak Gtk.Container viewers;
		public bool get_display_attachments ();
		public bool get_display_html ();
		public bool get_display_plain ();
		public bool get_display_rfc822 ();
		public void get_status_callback (Tny.StatusCallback status_callback, pointer status_user_data);
		public GtkMsgView ();
		public void set_display_attachments (bool setting);
		public void set_display_html (bool setting);
		public void set_display_plain (bool setting);
		public void set_display_rfc822 (bool setting);
		public void set_parented (bool parented);
		public void set_status_callback (Tny.StatusCallback status_callback, pointer status_user_data);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkMsgWindow : Gtk.Window, Atk.Implementor, Gtk.Buildable, Tny.MimePartView, Tny.MsgView, Tny.MsgWindow {
		public GtkMsgWindow (Tny.MsgView msgview);
		public void set_view (Tny.MsgView view);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkPasswordDialog : GLib.Object, Tny.PasswordGetter {
		public GtkPasswordDialog ();
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkPixbufStream : GLib.Object, Tny.Stream {
		public weak Gdk.Pixbuf get_pixbuf ();
		public GtkPixbufStream (string mime_type);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkTextBufferStream : GLib.Object, Tny.Stream {
		public GtkTextBufferStream (Gtk.TextBuffer buffer);
		public void set_text_buffer (Gtk.TextBuffer buffer);
	}
	[CCode (cheader_filename = "tnyui.h")]
	public class GtkTextMimePartView : Gtk.TextView, Atk.Implementor, Gtk.Buildable, Tny.MimePartView {
		public GtkTextMimePartView (Tny.StatusCallback status_callback, pointer status_user_data);
	}
}
